// Generated by view binder compiler. Do not edit!
package com.example.constellation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.constellation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView signDesc;

  @NonNull
  public final ImageView signImage;

  @NonNull
  public final RelativeLayout signLayout;

  @NonNull
  public final TextView signName;

  private FragmentSignBinding(@NonNull RelativeLayout rootView, @NonNull TextView signDesc,
      @NonNull ImageView signImage, @NonNull RelativeLayout signLayout,
      @NonNull TextView signName) {
    this.rootView = rootView;
    this.signDesc = signDesc;
    this.signImage = signImage;
    this.signLayout = signLayout;
    this.signName = signName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.signDesc;
      TextView signDesc = ViewBindings.findChildViewById(rootView, id);
      if (signDesc == null) {
        break missingId;
      }

      id = R.id.signImage;
      ImageView signImage = ViewBindings.findChildViewById(rootView, id);
      if (signImage == null) {
        break missingId;
      }

      RelativeLayout signLayout = (RelativeLayout) rootView;

      id = R.id.signName;
      TextView signName = ViewBindings.findChildViewById(rootView, id);
      if (signName == null) {
        break missingId;
      }

      return new FragmentSignBinding((RelativeLayout) rootView, signDesc, signImage, signLayout,
          signName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
